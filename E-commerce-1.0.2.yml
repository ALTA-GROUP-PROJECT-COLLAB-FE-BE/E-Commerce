openapi: 3.0.0
info:
  version: 1.0.02
  title: E-Commerce Group-2
  description: API for E-commerce

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/HERIBUDIYANA/E-commerce-2/1.0.02
tags:
  - name: Login
  - name: Users
  - name: Product
  - name: Cart
  - name: Order

paths:

  /login:
    post:
      tags:
        - Login
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#"
            example:
              email: jackma@gmail.com
              password: asdf123
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseLoginSuccess"
              examples:
                responseData1:
                  description: response success 1
                  value:
                    {
                      code: 200,
                      status: "success",
                      message: "Login Success",
                      data:
                        {
                          nama: "jackma",
                          token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2MzgzMjYxODAsInVzZXJJZCI6MSwidXNlcm5hbWUiOiJhZG1pbiJ9.AebFR-oQjUSOMez2ucDWkiMrS2eQIPmcYm5c71qZ_co",
                        },
                    }
        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value:
                    {
                      code: 400,
                      status: "failed",
                      message: "email or password incorrect",
                    }
  #------------------------USERS------------------
  /users:
    post:
      tags:
        - Users
      # parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#"
            example:
              name: jackma
              email: jackma@gmail.com
              password: asdf123
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  description: response success 1
                  value:
                    {
                      code: 200,
                      status: "success",
                      message: "success operation create data",
                    }
        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value:
                    {
                      code: 400,
                      status: "failed",
                      message: "please make sure all fields are filled in correctly",
                    }
  /users/{id}:
    get:
      tags:
        - Users
      security:
        - JWTAuth: []
      parameters:
        - name: iduser
          description: get data by id
          in: query
          schema:
            type: integer
            example: 1
          required: true
      responses:
        "403":
          description: forbiden
        "404":
          description: No data
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  description: response success 1
                  value:
                    {
                      id: 1,
                      name: "jackma",
                      phone: "6287123",
                      address: "Swiss"
                     
                    }
        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value: { code: 400, status: "failed", message: "bad request" }
    put:
      tags:
        - Users
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#"
            example:
              name: jackma
              email: jackma@gmail.com
              password: asdf123
      parameters:
        - name: iduser
          in: query
          schema:
            type: integer
            example: 1
          required: true
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  value:
                    code: 200
                    status: "success"
                    message: "Successful Operation"

        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value: { code: 400, status: "failed", message: "Bad Request" }
    delete:
      tags:
        - Users
      security:
        - JWTAuth: []
      parameters:
        - name: iduser
          in: query
          schema:
            type: integer
            example: 1
          required: true
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  value:
                    code: 200
                    status: "success"
                    message: "Successful Operation"

        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value: { code: 400, status: "failed", message: "Bad Request" }
  #product
  /products:
    post:
      tags:
        - Product
      # parameters: []
      security:
        - JWTAuth: []    
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#"
            example:
              name: Nike Air Jordan
              price: 700000
              qty: 1
              image: "nike-air-jordan.jpg"
              description: nike air jordan black

      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  description: response success 1
                  value:
                    {
                      code: 200,
                      status: "success",
                      message: "success operation create data",
                    }
        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value: { code: 400, status: "failed", message: "Bad request" }

    get:
      tags:
        - Product
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
          description: The numbers of items to return
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  description: response success 1
                  value:
                    {
                      id: 5,
                      name: Nike Air Jordan,
                      price: 700000,
                      qty: 1,
                      description: nike air jordan black,
                    }
        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value: { code: 400, status: "failed", message: "Bad request" }

  /products/{id}:
    get:
      tags:
        - Product
      security:
        - JWTAuth: []
      parameters:
        - name: idproduct
          description: get data by id
          in: path
          schema:
            type: integer
            example: 1
          required: true
      responses:
        "403":
          description: forbiden
        "404":
          description: No data
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  description: response success 1
                  value:
                    {
                      id: 1,
                      name: Nike Air Jordan,
                      price: 700000,
                      qty: 1,
                      image: https://www.altahsop.id/product/nike/,
                      description: nike air jordan black,
                      User: { id: 6, name: Merry },
                    }
        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value: { code: 400, status: "failed", message: "bad request" }
    put:
      tags:
        - Product
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#"
            example:
              name: Nike Air Jordan
              price: 69900
              qty: 1
              image: https://www.altahsop.id/product/nike/
              description: nike air jordan only red white
      parameters:
        - name: iduser
          in: query
          schema:
            type: integer
            example: 1
          required: true
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  value:
                    code: 200
                    status: "success"
                    message: "Successful Operation"

        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value:
                    {
                      code: 400,
                      status: "failed",
                      message: "Bad Request, missing or malformed jwt",
                    }
    delete:
      tags:
        - Product
      security:
        - JWTAuth: []
      parameters:
        - name: iduser
          in: query
          schema:
            type: integer
            example: 1
          required: true
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  value:
                    code: 200
                    status: "success"
                    message: "Successful Operation"

        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value: { code: 400, status: "failed", message: "Bad Request" }
  

  /carts:
    post:
      tags:
        - Cart
      security:
        - JWTAuth: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#"
            example:
              product_id: 2
              qty: 1

      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  description: response success 1
                  value:
                    {
                      code: 200,
                      status: "success",
                      message: "success operation create data",
                    }
        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value: { code: 400, status: "failed", message: "Bad request" }
    get:
      tags:
        - Cart
      security:
        - JWTAuth: []
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  description: response success 1
                  value:
                    {
                      id: 7,
                      qty: 4,
                      total_price: 1000000,
                      user_id: 8,
                      product:
                        {
                          id: 5,
                          name: Convers Hoodie,
                          price: 250000,
                          qty: 1,
                          description: Convers Hoodie Black Red,
                        },
                    }
        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value: { code: 400, status: "failed", message: "Bad request" }

  /carts/{idcart}:
    put:
      tags:
        - Cart
      security:
        - JWTAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#"
            example:
              qty: 1
      parameters:
        - name: idcart
          in: path
          schema:
            type: integer
            example: 1
          required: true
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  value:
                    code: 200
                    status: "success"
                    message: "Successful Operation"

        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value:
                    {
                      code: 400,
                      status: "failed",
                      message: "Bad Request, missing or malformed jwt",
                    }
    delete:
      tags:
        - Cart
      security:
        - JWTAuth: []
      parameters:
        - name: iduser
          in: path
          schema:
            type: integer
            example: 1
          required: true
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  value:
                    code: 200
                    status: "success"
                    message: "Successful Operation"

        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value:
                    {
                      code: 400,
                      status: "failed",
                      message: "Bad Request, missing or malformed jwt",
                    }

  /orders:
    post:
      tags:
        - Order
      security:
        - JWTAuth: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#"
            example:
                {
              cart_id: [
                2, 3
              ],
              address: {
                street: "Jalan Margonda Raya",
                city: "Depok",
                province: "Jawa Barat",
                postal_code: "16533"
                  },
              payment: {
                payment_name: "Mastercard",
                card_number: "1111-2222-3333-4444",
                payment_code: "2999"
                  }
                } 

      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  description: response success 1
                  value:
                    {
                      code: 200,
                      status: "success",
                      message: "success operation create data",
                    }
        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value: { code: 400, status: "failed", message: "Bad request" }

  /orders/me:
    get:
      tags:
        - Order
      security:
        - JWTAuth: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#"
            example:
              id: 4
              user_id: 6
              total_price: 1298000
              status: "on process"
              product: {
                  street: "Jalan Margonda Raya",
                  city: "Depok",
                  province: "Jawa Barat",
                  postal_code: "16533"
                      }
              payment_name: "Mastercard"
              created_at: "2022-09-13T00:11:33.42Z"
              
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  description: response success 1
                  value:
                    {
                      code: 200,
                      status: "success",
                      message: "success operation create data",
                    }
        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value: { code: 400, status: "failed", message: "Bad request" }
  /orders/{idorder}/confirm:
    put:
      tags:
        - Order
      security:
        - JWTAuth: []
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  value:
                    code: 200
                    status: "success"
                    message: "Successful Operation"

        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value:
                    {
                      code: 400,
                      status: "failed",
                      message: "Bad Request, missing or malformed jwt",
                    }
  /orders/{idorder}/cancel:
    put:
      tags:
        - Order
      security:
        - JWTAuth: []
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  value:
                    code: 200
                    status: "success"
                    message: "Successful Operation"

        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value:
                    {
                      code: 400,
                      status: "failed",
                      message: "Bad Request, missing or malformed jwt",
                    }
  /orders/history:
    get:
      tags:
        - Order
      security:
        - JWTAuth: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#"
            example:
              id: 54,
              user_id: 1
              total_price: 800000
              status: "Cancelled"
              product: {
                  street: "Jalan Margonda Raya",
                  city: "Depok",
                  province: "Jawa Barat",
                  postal_code: "16533",
                      }
              payment_name: "Mastercard"
              created_at: "2022-09-15T14:34:22.537Z"
               
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  description: response success 1
                  value:
                    {
                      code: 200,
                      status: "success",
                      message: "success operation get data",
                    }
        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value: { code: 400, status: "failed", message: "Bad request" }
  /orderdetail/{idorder}:
    get:
      tags:
        - Order
      security:
        - JWTAuth: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#"
            example:
              id: 5
              order_id: 4
              product_name: "Adidas"
              price: 799000,
              qty: 1
      responses:
        "200":
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "#"
              examples:
                response data:
                  description: response success 1
                  value:
                    {
                      code: 200,
                      status: "success",
                      message: "success operation create data",
                    }
        "400":
          description: Failed Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/failedResponse"
              examples:
                responseData1:
                  description: response failed 1
                  value: { code: 400, status: "failed", message: "Bad request" }


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    requestLogin:
      type: object
      properties:
        "email":
          type: string
          minLength: 1
        "password":
          type: string
          minLength: 1
    responseLoginSuccess:
      type: object
      properties:
        {
          "code": { type: number },
          "message": { type: string },
          "status": { type: string },
          "data": { type: object },
        }
    failedResponse:
      type: object
      properties:
        {
          "code": { type: number },
          "message": { type: string },
          "status": { type: string },
        }